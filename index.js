import 'dotenv/config';
import { MongoClient } from 'mongodb';
import TelegramBot from 'node-telegram-bot-api';
import * as cheerio from 'cheerio';
import puppeteer from 'puppeteer';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const MONGO_URI = process.env.MONGO_URI;
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const CHAT_ID = process.env.CHAT_ID;
const QUESTS_URL = 'https://app.layer3.xyz/search';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_TOKEN, {
	polling: true,
	cancelable: true
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
async function connectToDB() {
	const client = new MongoClient(MONGO_URI);
	await client.connect();
	return client.db('questsDB').collection('quests');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∫–≤–µ—Å—Ç–æ–≤
async function checkForNewQuests() {
	let browser;
	try {
		const collection = await connectToDB();

		browser = await puppeteer.launch({
			headless: "new",
			args: ['--no-sandbox']
		});

		const page = await browser.newPage();

		// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ User-Agent
		await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');

		await page.goto(QUESTS_URL, {
			waitUntil: 'networkidle0',
			timeout: 30000
		});

		// –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
		await page.waitForTimeout(5000);

		// –ü–æ–ª—É—á–∞–µ–º HTML
		const html = await page.evaluate(() => document.documentElement.outerHTML);

		const $ = cheerio.load(html);

		// –ò—â–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–≤–µ—Å—Ç–∞–º–∏
		const quests = [];
		$('a').each((_, element) => {
			const href = $(element).attr('href');
			if (href && href.includes('/v2/quests/')) {
				const title = $(element).find('h2').text().trim();
				const id = href.split('/').pop();
				if (title && id) {
					quests.push({ id, title, href });
				}
			}
		});

		console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–≤–µ—Å—Ç–æ–≤: ${quests.length}`);

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∫–≤–µ—Å—Ç—ã
		for (const quest of quests) {
			const exists = await collection.findOne({ id: quest.id });
			if (!exists) {
				console.log(`–ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç: ${quest.title}`);
				await collection.insertOne(quest);
				await bot.sendMessage(CHAT_ID,
					`üéÆ –ù–æ–≤—ã–π –∫–≤–µ—Å—Ç!\n\n` +
					`üìå –ù–∞–∑–≤–∞–Ω–∏–µ: ${quest.title}\n` +
					`üîó –°—Å—ã–ª–∫–∞: https://app.layer3.xyz${quest.href}`
				);
			}
		}

	} catch (error) {
		console.error('–û—à–∏–±–∫–∞:', error);
		// –°–¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
		if (browser) {
			const page = (await browser.pages())[0];
			if (page) {
				await page.screenshot({ path: 'error.png', fullPage: true });
				console.log('–°–¥–µ–ª–∞–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏: error.png');
			}
		}
	} finally {
		if (browser) {
			await browser.close();
		}
	}
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
const CHECK_INTERVAL = 10 * 60 * 1000;
console.log(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: ${CHECK_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥`);
setInterval(checkForNewQuests, CHECK_INTERVAL);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
bot.on('message', (msg) => {
	const chatId = msg.chat.id;
	console.log('Chat ID:', chatId);
	bot.sendMessage(chatId, `–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!\n–í–∞—à Chat ID: ${chatId}`);
});

// –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
checkForNewQuests();